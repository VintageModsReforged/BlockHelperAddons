buildscript {
	repositories {
		mavenCentral()
		maven { url "https://maven.fabricmc.net" }
		maven { url "https://repo.sleeping.town" } //Commented out to use the version of voldeloom in the settings.gradle includeBuild (hopefully??)
	}
	dependencies {
		classpath "agency.highlysuspect:voldeloom:2.2-SNAPSHOT"
	}
}

apply plugin: "agency.highlysuspect.voldeloom"

java.toolchain.languageVersion = JavaLanguageVersion.of(11) //Last version able to set a --release as low as 6
compileJava.options.release.set(6) //Forge doesn't understand classes compiled to versions of the class-file format newer than Java 6's

String minecraftVersion = "1.4.7"
String forgeVersion = "1.4.7-6.6.2.534"
archivesBaseName = project.modid
version = project.modVersion

volde {
	forgeCapabilities {
		srgsAsFallback = true
	}
	
	runs {
		client {
			programArg "quaternary"
		}
	}
}

repositories {
	maven { url = "https://api.modrinth.com/maven" }
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraftVersion}"
	forge "net.minecraftforge:forge:${forgeVersion}:universal@zip"
	
	mappings volde.layered {
		baseZip "net.minecraftforge:forge:${forgeVersion}:src@zip"
		unmapClass(["bar", "bas"])
	}

	// main
	modImplementation files("libs/VintageCore-1.4.7-2.0.0-dev.jar")

	// ic2
	modImplementation files("libs/industrialcraft-2_1.115.207-lf.jar")
	// gregtech
	modImplementation files("libs/gregtechmod290h.zip")
	// addons
	modImplementation files("libs/AdvancedMachines-1.4.7-4.7.5.2d-dev.jar")
	modImplementation files("libs/compactsolars.zip")
	modImplementation files("libs/apm.jar")
	modImplementation files("libs/BlockHelper-1.4.7-2.0.0-pre4.jar")

	modImplementation('maven.modrinth:nei:vqhwlzMQ')
	modImplementation('maven.modrinth:codechicken-core:tHDtt4Mh')

	//accessTransformers files("./src/main/resources/good_cool_ats.cfg")
}

def props = ['modName', 'modid', 'modVersion', 'modDescription', 'modAuthors', 'modDeps', 'minecraft', 'url']
processResources {
	filesMatching("mcmod.info") {
		expand(project.properties.subMap(props))
	}
}

task sourcesJar(type: Jar) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar
}